name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            tesseract-install: sudo apt-get update && sudo apt-get install -y libleptonica-dev libtesseract-dev tesseract-ocr
          - os: macos-latest
            tesseract-install: brew install tesseract
          - os: windows-latest
            tesseract-install: |
              winget install --id=UB-Mannheim.TesseractOCR  -e --accept-package-agreements --accept-source-agreements
              echo "C:\Program Files\Tesseract-OCR" >> $env:GITHUB_PATH

    steps:
      - uses: actions/checkout@v4
      - name: Checkout submodules
        run: git submodule update --init --recursive

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install additional dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libdbus-1-dev libssl-dev libclang-dev libxcb1-dev libxrandr-dev libpipewire-0.3-dev libwayland-dev libegl-dev

      - name: Install Tesseract
        run: ${{ matrix.tesseract-install }}

      - name: Run tests
        run: cargo test --all-features -- --nocapture 